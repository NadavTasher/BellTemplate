<?php

/**
 * Copyright (c) 2019 Nadav Tasher
 * https://github.com/NadavTasher/BellTemplate/
 **/

const URL = "https://127.0.0.0";
const DATABASE_FILE = __DIR__ . DIRECTORY_SEPARATOR . "database.json";
const MEDIA_DIRECTORY = __DIR__ . DIRECTORY_SEPARATOR . "media";
const DATABASE_ADDRESS = URL . "/files/bell/database.json";
const SOFTWARE_ADDRESS = URL . "/scripts/client/bell.txt";
const MEDIA_ADDRESS = URL . "/files/media";

$database = load();

if (isset($argv)) {
    if (sizeof($argv) > 1) {
        $command = $argv[1];
        switch ($command) {
            case "refresh":
                refresh();
                break;
            case "update":
                update();
                break;
            case "play":
                play();
                break;
        }
    }
}

function starts($haystack, $needle)
{
    return (substr($haystack, 0, strlen($needle)) === $needle);
}

function load()
{
    $database = null;
    if (file_exists(DATABASE_FILE)) {
        $content = file_get_contents(DATABASE_FILE);
        if (!empty($content))
            $database = json_decode($content);
    }
    return $database;
}

function refresh()
{
    global $bell_database;
    file_put_contents(DATABASE_FILE, file_get_contents(DATABASE_ADDRESS));
    $bell_database = load();
    if ($bell_database !== null) {
        if (isset($bell_database->queue) && isset($bell_database->library) && isset($bell_database->preset)) {
            $preset = $bell_database->preset;
            foreach ($bell_database->queue as $time => $media) {
                $file = BELL_MEDIA_DIRECTORY . DIRECTORY_SEPARATOR . $time . ".mp3";
                if (isset($media->$preset) && isset($media->$preset->media)) {
                    $id = $media->$preset->media;
                    if (isset($bell_database->library->$id) && isset($bell_database->library->$id->hash) && isset($bell_database->library->$id->media)) {
                        if (sha1_file($file) !== $bell_database->library->$id->hash) {
                            file_put_contents($file, file_get_contents(MEDIA_ADDRESS . DIRECTORY_SEPARATOR . $bell_database->library->$id->media));
                        }
                    }
                }
            }
        }
    }
}

function update()
{
    $software = file_get_contents(SOFTWARE_ADDRESS);
    if (!empty($software)) {
        if (starts($software, "<?php")) {
            if (sha1($software) !== sha1_file(__FILE__)) {
                file_put_contents(__FILE__, $software);
            }
        }
    }
}

function play()
{
    global $bell_database;
    if ($bell_database !== null) {
        if (isset($bell_database->mute) && isset($bell_database->duration) && isset($bell_database->queue) && isset($bell_database->library) && isset($bell_database->preset)) {
            if (!$bell_database->mute && $bell_database->duration > 0) {
                $preset = $bell_database->preset;
                $duration = $bell_database->duration;
                $time = intval(date("H")) * 60 + intval(date("i"));
                if (isset($bell_database->queue->$time) && isset($bell_database->queue->$time->$preset) && isset($bell_database->queue->$time->$preset->media) && isset($bell_database->queue->$time->$preset->second)) {
                    $id = $bell_database->queue->$time->$preset->media;
                    $second = $bell_database->queue->$time->$preset->second;
                    if (isset($bell_database->library->$id) && isset($bell_database->library->$id->hash)) {
                        $file = BELL_MEDIA_DIRECTORY . DIRECTORY_SEPARATOR . $time . ".mp3";
                        if (file_exists($file)) {
                            if (sha1_file($file) === $bell_database->library->$id->hash) {
                                shell_exec("ffplay -i " . $file . " -ss " . $second . " -t " . $duration . " -v error -nodisp -autoexit");
                            }
                        }
                    }
                }
            }
        }
    }
}